(function(e){e.statically="https://cdn.statically.io/gh/{owner}/{repo}/{branch}/{file}",e.githack="https://raw.githack.com/{owner}/{repo}/{branch}/{file}",e.GITHACK="githack",e.STATICALLY="statically",e.old_version="https://{owner}.github.io/{repo}/{file}",e.gh_api="https://api.github.com/repos/{owner}/{repo}/pulls/{number}",e.html_diff="https://services.w3.org/htmldiff?doc1={old}&doc2={new}",e.spec_gen="https://labs.w3.org/spec-generator/?type=respec&url={url}",e.markdown=`
See:

* [Preview]({preview})
* [Diff]({diff})
`})(r||(r={}));function m(e,o,a,p,l="index.html"){let n=f=>f.replace(/\?/g,"%3F").replace(/&/g,"%26"),t=o.head.repo.full_name.split("/"),i={owner:t[0],repo:t[1]},s={branch:o.head.ref},c=(a===r.GITHACK?r.githack:r.statically).replace("{owner}",i.owner).replace("{repo}",i.repo).replace("{branch}",s.branch).replace("{file}",l),d=r.old_version.replace("{owner}",e.owner).replace("{repo}",e.repo).replace("{file}",l),w=p?n(r.spec_gen.replace("{url}",c)):c,_=p?n(r.spec_gen.replace("{url}",d)):d;return{new:c,diff:r.html_diff.replace("{old}",_).replace("{new}",w)}}async function h(e,o,a=!0,p=["index.html"]){let l=async c=>await(await fetch(c)).json(),n=new URL(e).pathname.split("/"),t={owner:n[1],repo:n[2]},i=n[4],s=r.gh_api.replace("{owner}",t.owner).replace("{repo}",t.repo).replace("{number}",i),u=await l(s);return p.map(c=>m(t,u,o,a,c))}var r;async function v(e){try{let o=document.getElementById("url"),a=document.getElementById("service"),l=!document.getElementById("text").checked,n=document.getElementById("markdown"),t=await h(o.value,a.value,l);n.value=r.markdown.replace("{preview}",t[0].new).replace("{diff}",t[0].diff)}catch(o){alert(`preview error: ${o}`)}}globalThis.addEventListener("load",()=>{let e=document.getElementById("go");e&&e.addEventListener("click",v)});
